nginx+php+mysql搭建web服务器

#+OPTIONS: ^:nil

本文讲述如何用nginx+php+mysql搭建web服务器，操作系统为ubuntu 10.10

* 下载
** 下载开发包
: root@ubuntu:# apt-get install libpcre3-dev libxml2-dev wget

** 下载nginx源码(http://nginx.org)
: root@ubuntu:~/software# wget http://nginx.org/download/nginx-1.2.0.tar.gz

** 下载php源码(http://www.php.net)
: root@ubuntu:~/software# wget http://cn2.php.net/get/php-5.4.3.tar.bz2/from/this/mirror -O php-5.4.3.tar.bz2


* 编译&安装
** nginx
: root@ubuntu:~/software# tar xzvf nginx-1.2.0.tar.gz
: root@ubuntu:~/software# cd nginx-1.2.0
: root@ubuntu:~/software/nginx-1.2.0# ./configure --user=nobody --group=nogroup --add-module=../ngx_cache_purge --with-http_ssl_module --prefix=/usr/local/nginx
: root@ubuntu:~/software/nginx-1.2.0# make && make install

** php
: root@ubuntu:~/software# tar xjvf php-5.4.3.tar.bz2
: root@ubuntu:~/software# cd php-5.4.3
: root@ubuntu:~/software/php-5.4.3# ./configure --prefix=/usr/local/php --with-mysql --with-mysqli --with-pdo-mysql
: root@ubuntu:~/software/php-5.4.3# make && make install

** mysql
mysql使用系统的安装包：
: root@ubuntu:~/software# apt-get install mysql-client mysql-server


* 配置
** nginx.conf
#+begin_example 
user  nobody nogroup;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:60005;
            fastcgi_index  index.php;            
            fastcgi_param  SCRIPT_FILENAME  $document_root/$fastcgi_script_name;            
            include        fastcgi_params;        
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

#+end_example
** php.ini(可选)
** 设置目录权限
: root@ubuntu:~# chown nobody:nogroup /usr/local/nginx/html -R


* 运行
** 运行nginx
: root@ubuntu:# /usr/local/nginx/sbin/nginx

** 运行php-cgi
: root@ubuntu:# /usr/local/php/bin/php-cgi -b 127.0.0.1:60005 -c /usr/local/php/etc/php.ini &

** 测试
写一个测试页面，看看能否打开：
: root@ubuntu:# cat /usr/local/nginx/html/test.php
: <?php
: phpinfo();
: ?>

