#+BLOG: wuyao721
#+POSTID: 165
#+DATE: [2012-11-26 星期一 11:29]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil TeX:nil
#+CATEGORY: 
#+PERMALINK: app-dev-log
#+TAGS: 软件开发
#+DESCRIPTION:
#+TITLE: 应用开发笔记之——日志

在应用程序里增加记录日志功能，可能是很多程序员都会忽略的事情，或者懒得去写。

实际上，懒得去写日志，必然会导致勤快地去调试程序。当然，记录日志跟程序生命周期和程序规模有很大关系。程序规模越大，运行周期越长，记录日志就显的越重要。

* 记录日志作用
应用程序记录日记有多个作用，包括：
 - 记录程序的运行状况
 - 记录程序功能的情况
 - 间接记录用户操作轨迹
 - 帮助程序员找出问题的症结所在

以网页服务器为例子，它一般会有两个日志文件： =access.log= 和 =error.log= ，分别记录了页面请求和错误处理的页面。

* 格式
每条日志一般必须有以下字段：
 - 发生时间
 - 日记内容
 - 日记级别（大概有6级）
    - FATAL
    - ERROR
    - WARN
    - NOTICE
    - INFORMATION
    - DEBUG

* 日志分类
针对记录日志的目的，可以把日志分成几类：
  - 运行日志
  - 出错日志
  - 调试日志

** 运行日记
应用程序必须要有运行日志，它是程序正常运行的有力证明。
运行日志有一个难题，那就是要选择正确的时机记录日志。

一般在以下情况都可以记录日志：
 - 程序开始
 - 程序退出
 - 线程开始
 - 线程退出

另外，对于一个任务，要记录以下内容：
 - 任务概要
 - 任务结果（成功了，还是失败了）

如果任务能够较快完成，那么只记录了第一项—— *任务概要* ，也是可以的。

** 出错日志
出错日志的意义在：如果程序好好的，那么干嘛还要看日志啊。

出错日志不仅可以给程序员看，也可以给管理员看。出于这个考虑，通常把它写到一个单独的文件里。

** 调试日志
调试日志可以帮助程序员发现、解决问题。一般情况下包含以下字段：
 - 案发现场（比如说在哪个函数里、第几行数、哪个类等等）
 - 线程标识（记录这是第几个线程）

#+begin_quote
本文由吴遥编写，转载请注明出处。
文章链接：[[http://www.wuyao721.com/app-dev-log.html]]
#+end_quote
