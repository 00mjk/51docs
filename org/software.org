#+DATE: [2013-07-04 星期四 16:10]
#+BLOG: wuyao721
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil TeX:nil 
#+CATEGORY: nginx
#+TAGS: nginx, proxy
#+PERMALINK: nginx-building-windows
#+TITLE: 什么导致了你的产品不稳定

作为一个有追求的程序员，如果自己做的产品有问题，不稳定，一旦被人发现，那是一件很丢人的事情。

#+HTML: <!--more--> 

* 立项
大部分情况下一个项目都由客户、老板甚至于项目负责人提出。开发人员是没有决定权力的，当然，如果不认同项目的初衷，完全可以不参进去。

* 需求、设计的陷阱
开发人员必须参与需求、设计。

** 庞大的系统，失败的根源
很多时候项目的失败，从一开就错了。领导们决定了一个无法完成的项目。项目的失败，不仅浪费了好几个月的时间，对项目组全体成员都是一个极大的打击。

另一种情况，项目很快就开发完成了，测试的时间比开发还多，交付后运行也很不稳定，花费大量的时间用在调试上面。

** 功能以及稳定，两者取其一


** 让新手在系统开发中充当主力，是一件很鲁莽的事情
一个经验丰富的程序员，有天他当上了项目负责人（Team Leader，简称TM），TM的注意力开始放在系统设计上面，编码对TM来是轻而易举，却又是单调重复的事情。TM手下有一两个可靠的年轻有为的程序员，TM决定让他们充当开发的主力。这本是再正常不过的事情，不幸的是：TM很懒（懒是程序员的优点~_~），他说服自己相信他的手下，相信他们能按自己的想法把代码写的漂漂亮亮的，代码检查这么繁琐的事情就不用做了。

** 赶进度难做出好产品
软件工程师其实并不要求技术很牛，但是需要细心。赶进度写出的代码往往都有很多BUG，必须考虑到方方面面


系统不稳定的因数
用C/C++编写的

如果产品要

同一种平台，DLL库不同的情况

* 系统设计的时候没有很好的取舍，什么功能要去实现

* 代码系统杂乱

* 过多的开发人员维护代码，而没有一个统一审核的人

* 监督测试

* 真的要重构的吗
重构得付出很大的代价，吃力不讨好。

** 重构的陷阱

** 补补漏洞，得过且过

** 有能力重构吗，想清楚了吗

** 选好重构的时机

* 通用软件的纠结
** 动态链接库
** 平台差别，windowsXP 2003 linux等等 64位，32位系统的差别
** 太多的假设


* 一种信心
我们有理由相信，对于一个正真的程序员，系统不稳定，那只是暂时的，下一个项目，我们会避开曾经犯下的错误。

#+begin_quote
本文由吴遥编写，转载请注明出处。
文章链接：[[http://www.wuyao721.com/software.org]]
#+end_quote
