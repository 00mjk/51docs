#+OPTIONS: toc:nil ^:nil 
#+CATEGORY: language
#+PERMALINK: django-admin
#+TAGS: python
#+LaTeX_CLASS: cjk-article
#+DESCRIPTION:
#+TITLE: django启用管理界面

#+html: <!--more--> 

激活管理界面
Django管理站点完全是可选择的，因为仅仅某些特殊类型的站点才需要这些功能。这意味着你需要在你的项目中花费几个步骤去激活它。


* 制作自己的app
运行 *django-admin.py startproject myapp* ， 创建新的APP

如果你的母语不是英语，而你不想用它来配置你的浏览器，你可以做一个快速更改来观察Django管理工具是否被翻译成你想要的语言。仅需添加 *django.middleware.locale.LocaleMiddleware* 到 *MIDDLEWARE_CLASSES* 设置中，并确保它在 *django.contrib.sessions.middleware.SessionMiddleware* 之后

在 *books* 目录下 *mysite/books* ，创建一个文件： *admin.py* ，然后输入以下代码：
: from django.contrib import admin 
: from mysite.books.models import Publisher, Author, Book 
: admin.site.register(Publisher) 
: admin.site.register(Author) 
: admin.site.register(Book)   

我们可以改变列表的显示。 这个页面应该提供便利，比如说：在这个列表中可以看到作者的邮箱地址。如果能按照姓氏或名字来排序，那就更好了。为了达到这个目的，我们将为 *Author* 模块定义一个 *ModelAdmin* 类。 这个类是自定义管理工具的关键，其中最基本的一件事情是允许你指定列表中的字段。 打开 *admin.py* 并修改： 
: from django.contrib import admin 
: from mysite.books.models import Publisher, Author, 
: Book class AuthorAdmin(admin.ModelAdmin):
:     list_display = ('first_name', 'last_name', 'email')
:     admin.site.register(Publisher)
:     admin.site.register(Author, AuthorAdmin)
:     admin.site.register(Book)

* 修改setting.py

 1. 保证 *setting.py* 的 *INSTALLED_APPS* 里加入 *django.contrib.admin* *django.contrib.auth* *django.contrib.contenttypes* *django.contrib.sessions*
 2. 保证 *MIDDLEWARE_CLASSES* 里加入 *django.middleware.common.CommonMiddleware* *django.contrib.sessions.middleware.SessionMiddleware* *django.contrib.auth.middleware.AuthenticationMiddleware*

* 生成数据库
运行 *python manage.py syncdb* ，生成数据库使用的表格

参考资料： [[http://blog.sina.com.cn/s/blog_6fb22e5b0100ns1c.html][django 学习总结 管理界面]]

#+begin_quote
转载请注明出处：[[http://www.wuyao721.com/django-admin.html]]
#+end_quote
